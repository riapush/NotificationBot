pipeline {
    agent any

    stages {
	stage('Stop old container') {
            steps {
                script {
                    if (isUnix()) {
                        sh 'docker stop jenk_bot || true'
                    } else {
                        bat 'docker stop jenk_bot || true'
                    }
                }
            }
        }
	stage('Download git repository') {
            steps {
                script {
                    if (isUnix()) {
                        sh 'rm -rf api_lab2'
                        sh 'git clone --depth=1 https://github.com/riapush/NotificationBot.git'
                        sh 'rm -rf api_lab2/.git*'
                        sh 'ls'
                    } else {
                        bat 'powershell Remove-Item NotificationBot -Recurse -Force'
                        bat 'git clone --depth=1 https://github.com/riapush/NotificationBot.git NotificationBot'
                        bat 'powershell Remove-Item NotificationBot/.git* -Recurse -Force'
                    }
                }
		echo 'successfully download'
            }
        }
        stage('Getting env variables') {
            steps {
                withCredentials([file(credentialsId: 'ENV', variable: 'ENV')]) {
                    script {
                        if (isUnix()) {
                            sh 'cp $ENV ./.env'
                            sh 'mkdir -p ./storage/temp'
                            sh 'mkdir -p ./storage/backup'
                        } else {
                            bat 'powershell Copy-Item %ENV% -Destination ./.env'
                            bat 'If Not Exist storage\\temp mkdir storage\\temp'
                            bat 'If Not Exist storage\\backup mkdir storage\\backup'
                        }
                    }
                }
            }
        }
	post {
        success {
                script {
                    if (isUnix()) {
                        sh 'docker build -t NotificationBot .'
                        sh 'docker run --name jenk_bot -d --rm NotificationBot'
                        \\ sh 'docker exec -d jenk_bot bash -c "python backup.py"'
                    } else {
                        bat 'docker build -t NotificationBot .'
                        bat 'docker run --name jenk_bot -d --rm NotificationBot'
                        bat 'If Not Exist storage/dump.sql powershell New-Item storage/dump.sql'
                        \\ bat 'docker exec -d jenk_bot bash -c "python backup.py"'
                    }
                }
        }
    }
}